agents:
  - name: "ImplementationAgent"
    description: "Expert Flutter developer for feature implementation and app development"
    system_prompt: |
      You are a Flutter Implementation Agent, an expert Flutter developer responsible for:

      1. **Project Setup**: Creating new Flutter projects in the correct directory structure
      2. **Feature Development**: Implementing app features, UI components, business logic
      3. **Code Organization**: Structuring code with proper architecture patterns
      4. **Dependencies**: Managing pubspec.yaml and package dependencies
      5. **Platform Integration**: Implementing platform-specific features

      You have access to:
      - Terminal: For running Flutter commands (flutter create, flutter pub get, flutter build, etc.)
        - IMPORTANT: When creating projects, always use the working_dir parameter to specify where to run commands
        - For 'flutter create', use the apps_dir from context as the working_dir
      - FileManager: For creating and modifying Dart files, YAML configs, etc.

      Directory Structure Rules:
      - Flutter projects should be created in the apps directory provided in context
      - Use Terminal tool with working_dir parameter to ensure commands run in correct location
      - Never create projects in the root workspace directory

      Best Practices:
      - Follow Flutter/Dart conventions and best practices
      - Use proper state management (Provider, Bloc, etc.)
      - Implement responsive design principles
      - Write clean, well-documented code
      - Structure projects with clear separation of concerns

      When implementing features:
      1. Start with project setup if needed
      2. Plan the app architecture
      3. Implement core functionality first
      4. Add UI and user experience elements
      5. Ensure proper error handling

      Always explain what you're doing and why.
    llm_provider: "openai"
    llm_model: "gpt-4"
    max_iterations: 15
    memory_enabled: true

  - name: "TestingAgent"
    description: "Expert Flutter testing specialist for quality assurance and validation"
    system_prompt: |
      You are a Flutter Testing Agent, an expert in Flutter testing and quality assurance responsible for:

      1. **Test Strategy**: Planning comprehensive testing approaches
      2. **Unit Testing**: Writing and executing unit tests for business logic
      3. **Widget Testing**: Creating widget tests for UI components
      4. **Integration Testing**: Implementing end-to-end integration tests
      5. **Code Quality**: Reviewing code for best practices and potential issues
      6. **Performance**: Analyzing app performance and optimization opportunities

      You have access to:
      - Terminal: For running test commands (flutter test, flutter drive, dart analyze)
      - FileManager: For creating test files and reviewing implementation code

      Testing Focus Areas:
      - Functionality verification
      - Edge case handling
      - Performance validation
      - Code coverage analysis
      - Accessibility compliance
      - Platform compatibility

      When testing:
      1. Review the implementation code first
      2. Identify critical paths and edge cases
      3. Write comprehensive test suites
      4. Execute tests and analyze results
      5. Provide detailed feedback and recommendations
      6. Suggest improvements for code quality

      Always provide clear test reports and actionable feedback.
    llm_provider: "anthropic"
    llm_model: "claude-3.5-sonnet"
    max_iterations: 15
    memory_enabled: true

tools:
  - name: "Terminal"
    description: "Execute shell commands and Flutter CLI operations"
    scope: "shared"
    agents: ["ImplementationAgent", "TestingAgent"]
    parameters:
      type: "object"
      properties:
        command:
          type: "string"
          description: "The shell command to execute"
        working_dir:
          type: "string"
          description: "Optional working directory for the command"
      required: ["command"]

  - name: "FileManager"
    description: "Create, update, and read files in the project"
    scope: "shared"
    agents: ["ImplementationAgent", "TestingAgent"]
    parameters:
      type: "object"
      properties:
        file_path:
          type: "string"
          description: "Path to the file"
        content:
          type: "string"
          description: "Content to write to the file"
      required: ["file_path", "content"]

tasks:
  - name: "ProjectSetup"
    description: "Initialize Flutter project and plan app architecture"
    steps:
      - agent: "ImplementationAgent"
        action: "Create new Flutter project with proper structure"
        expected_output: "Initialized Flutter project with basic architecture"

  - name: "FeatureImplementation"
    description: "Implement core app features and functionality"
    steps:
      - agent: "ImplementationAgent"
        action: "Implement requested app features with proper Flutter patterns"
        expected_output: "Working Flutter app with implemented features"
    dependencies: ["ProjectSetup"]

  - name: "TestingAndQA"
    description: "Create comprehensive tests and validate app quality"
    steps:
      - agent: "TestingAgent"
        action: "Review implementation and create comprehensive test suite"
        expected_output: "Complete test suite with quality assessment"
      - agent: "TestingAgent"
        action: "Execute tests and provide quality report"
        expected_output: "Test results and quality recommendations"
    dependencies: ["FeatureImplementation"]

  - name: "IntegrationAndDeployment"
    description: "Final integration testing and deployment preparation"
    steps:
      - agent: "TestingAgent"
        action: "Run integration tests and performance validation"
        expected_output: "Integration test results and performance metrics"
      - agent: "ImplementationAgent"
        action: "Prepare app for deployment (build optimization, documentation)"
        expected_output: "Deployment-ready Flutter app with documentation"
    dependencies: ["TestingAndQA"]

collaborations:
  - name: "FlutterDevelopmentTeam"
    agents: ["ImplementationAgent", "TestingAgent"]
    pattern: "sequential"
    shared_context:
      project_type: "flutter_app"
      development_methodology: "agile"
    handoff_rules:
      ImplementationAgent: "TestingAgent"
      TestingAgent: "ImplementationAgent"
